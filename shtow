#!/bin/bash

shtow_install() {
    cd "$pkg" || return 1

    dirs="$(find . -mindepth 1 -type d | sed "s|./||")"
    for d in $dirs ; do
        mkdir -p "$target/$d"
    done

    files="$(find . -type f -or -type l | sed "s|./||")"
    for f in $files ; do
        targetf="$target/$f"
        thisdir=$(dirname "$targetf")
        relative=$(realpath "$f" --relative-to="$thisdir")
        if [[ ! -f "$targetf" ]] ; then
            ln -s "$relative" "$targetf"
        else
            echo "$targetf already exists. Skipping."
        fi
    done
}

shtow_uninstall() {
    cd "$pkg" || return 1

    files="$(find . -type f -or -type l | sed "s|./||")"
    for f in $files ; do
        targetf="$target/$f"
        if [[ $(realpath "$targetf") == $(realpath "$f") ]] ; then
            rm "$targetf"
        elif [[ -f "$targetf" ]] ; then
            echo "$targetf does not point to to $(realpath "$f"). Skipping."
        elif [[ ! -f "$targetf" ]] ; then
            echo "$targetf does not exist. Nothing to do."
        fi
    done

    dirs="$(find . -mindepth 1 -type d | sed "s|./||")"
    for d in $dirs ; do
        find "$target/$d" -type d -empty -delete
    done
}

shtow_help() {
    echo "Usage: $0 [-D] package [target]"
}

if [[ $_ == $0 ]]; then
    uninstall=0
    OPTIND=1 
    while getopts "vhD" opt; do
        case "$opt" in
        h|\?)
            shtow_help
            exit 0
            ;;
        D)  uninstall=1
            ;;
        v)  verbose=1
            ;;
        esac
    done
    shift $((OPTIND-1))
    
    if [[ -z ${1} ]] ; then
        shtow_help
        exit 1
    fi
    
    pkg=${1}
    target=${2-$HOME}
    
    if [[ $uninstall -eq 1 ]]; then
        if [[ $verbose -eq 1 ]] ; then echo "uninstalling $1 from $target" ; fi
        shtow_uninstall "$pkg" "$target"
    else
        if [[ $verbose -eq 1 ]] ; then echo "installing $1 to $target" ; fi
        shtow_install "$pkg" "$target"
    fi
fi
